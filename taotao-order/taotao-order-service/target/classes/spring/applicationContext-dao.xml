<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	<!-- 配置properties文件 -->
	<context:property-placeholder location="classpath:conf/db.properties"/>
	
	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="maxActive" value="10" />
		<property name="minIdle" value="5" />
	</bean>
	
	<!-- 配置sqlsessionfactory工厂 -->
	<bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- sqlmapconfig。xml文件位置 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml"/>
	</bean>
	
	<!-- 接口类,扫描基本包 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.taotao.order.mapper"/>
	</bean>
	
	<!-- ====================配置TCC=========================================== -->
	<!--======= TCC Transaction Begin ================= -->
	<!-- 设置恢复策略(可选），V1.1.0 新增定时任务配置 -->
	<bean class="org.mengyun.tcctransaction.spring.recover.DefaultRecoverConfig">
		<!-- maxRetryCount表示一个事务最多尝试恢复次数，超过将不在自动恢复，需要人工干预，默认是30次 -->
		<property name="maxRetryCount" value="30"/>
		<!-- recoverDuration表示一个事务日志当超过一定时间间隔后没有更新就会被认为是发生了异常，需要恢复，
            恢复Job将扫描超过这个时间间隔依旧没有更新的事务日志，并对这些事务进行恢复，时间单位是秒，默认是120秒 -->
		<property name="recoverDuration" value="120"/>
		<!-- cronExpression表示恢复Job触发间隔配置，默认是(每分钟)0 */1 * * * ? -->
		<property name="cronExpression" value="0 */1 * * * ?"/>
	</bean>

	<!-- TCC 业务活动日志（事务日志）的数据源 -->
	<bean id="tccDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="clone">
		<!-- 基本属性driverClassName、 url、user、password -->
		<property name="driverClassName" value="${point.jdbc.driver}" />
		<property name="url" value="${point.tcc.jdbc.url}" />
		<property name="username" value="${point.jdbc.username}" />
		<property name="password" value="${point.jdbc.password}" />
<!-- 
		配置初始化大小、最小、最大
		通常来说，只需要修改initialSize、minIdle、maxActive
		初始化时建立物理连接的个数，缺省值为0
		<property name="initialSize" value="${jdbc.initialSize}" />
		最小连接池数量
		<property name="minIdle" value="${jdbc.minIdle}" />
		最大连接池数量，缺省值为8
		<property name="maxActive" value="${jdbc.maxActive}" />

		获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
		<property name="maxWait" value="${jdbc.maxWait}" />
		 -->
	</bean>

	<!-- 使用SpringJdbc事务库 -->
	<bean id="transactionRepository"
		  class="org.mengyun.tcctransaction.spring.repository.SpringJdbcTransactionRepository">
		<property name="dataSource" ref="tccDataSource"/>
		<property name="domain" value="TRADE"/>
        <property name="tbSuffix" value="_TRADE"/>
	</bean>
	<!--======= TCC Transaction Begin ================= -->
	<!-- ====================配置TCC=========================================== -->
</beans>